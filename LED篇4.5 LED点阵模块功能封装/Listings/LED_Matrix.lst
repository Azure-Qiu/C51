C51 COMPILER V9.60.7.0   LED_MATRIX                                                        01/28/2025 16:36:55 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LED_MATRIX
OBJECT MODULE PLACED IN .\Objects\LED_Matrix.obj
COMPILER INVOKED BY: C:\Software\Keil\C51\BIN\C51.EXE LED_Matrix.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\L
                    -istings\LED_Matrix.lst) OBJECT(.\Objects\LED_Matrix.obj)

line level    source

   1          #include "LED_Matrix.h"
   2          /** 
   3           **  @brief    LED点阵封装（74HC595芯片驱动代码）
   4           **  @author   QIU
   5           **  @data     2023.08.23
   6           **/
   7          
   8          /*-------------------------------------------------------------------*/
   9          
  10          // 画面帧（2022年12月30日）
  11          u8 code Animation_Array[] = {
  12                  0x61,0x83,0x85,0x89,0x71,0x00,0x7E,0x81,
  13                  0x81,0x7E,0x00,0x61,0x83,0x85,0x89,0x71,
  14                  0x00,0x61,0x83,0x85,0x89,0x71,0x00,0x44,
  15                  0xDC,0x54,0x7F,0x54,0x44,0x00,0x40,0xFF,
  16                  0x00,0x61,0x83,0x85,0x89,0x71,0x00,0x01,
  17                  0xFE,0xA8,0x82,0xFF,0x00,0x42,0x91,0x99,
  18                  0x66,0x00,0x7E,0x81,0x81,0x7E,0x00,0xFF,
  19                  0x91,0x91,0xFF,0x00,0x00,0x00,0x00,0x00,
  20                  0x00,0x00,0x00,};
  21          
  22          
  23          /**
  24           **  @brief   74HC595芯片（串转并）驱动代码
  25           **  @param   dat:8位串行数据
  26           **  @retval  无
  27           **/
  28          void LED_control(u8 dat){
  29   1              u8 i;
  30   1              // 将一个字节拆分成串行输入
  31   1              for(i=0;i<8;i++){
  32   2                      SER = dat >> 7; // 先将最高位送入SER中
  33   2                      dat <<= 1; // 左移1位(去掉最高位)更新数据
  34   2                      SH = 0; // 给移位寄存器时序脉冲
  35   2                      _nop_();
  36   2                      SH = 1; // 检测到上升沿时将SER数据读入移位寄存器中
  37   2                      _nop_();
  38   2              }
  39   1              ST = 0; // 当一个字节传输完毕，此时移位寄存器已满。给存储寄存器时序脉冲
  40   1              _nop_();
  41   1              ST = 1; // 检测到上升沿时将移位寄存器中的8位数据全部读入存储寄存器中。通过
             -并行输出引脚可以直接检测到
  42   1              _nop_();
  43   1      }
  44          
  45          
  46          
  47          /**
  48           **  @brief   清屏函数
  49           **  @param   无
  50           **  @retval  无
  51           **/
  52          void LED_Matrix_Init(){
  53   1              LED_Matrix_PORT = 0xff;
C51 COMPILER V9.60.7.0   LED_MATRIX                                                        01/28/2025 16:36:55 PAGE 2   

  54   1      }
  55          
  56          
  57          /**
  58           **  @brief   动态显示对应静态画面帧（8*8）
  59           **  @param   datX：阴极，datY:阳极
  60           **  @retval  无
  61           **/
  62          void LED_Animation_Show(u8 datX, u8 datY){
  63   1              LED_Matrix_Init(); // 消影
  64   1              LED_control(datY); // 阳极码
  65   1              LED_Matrix_PORT = ~(0x80>>datX);
  66   1      }
  67          
  68          
  69          /**
  70           **  @brief   控制进入下一帧画面的时间
  71           **  @param   无
  72           **  @retval  动画数组索引偏移值
  73           **/
  74          u16 Next_LED_Index(){
  75   1              static u16 count; // count用于记录进入下一帧画面的时间
  76   1              static u16 j;    // j为画面帧移动的列数
  77   1              
  78   1              count++;
  79   1              if(count > SPEED){
  80   2                      count = 0;
  81   2                      j += COL_NUM;
  82   2                      if(j > LEN) j = 0;
  83   2              }
  84   1              return j;
  85   1      }
  86          
  87          
  88          
  89          
  90          /**
  91           **  @brief   延时法刷新LED点阵
  92           **  @param   参数说明
  93           **  @retval  返回值
  94           **/
  95          void LED_Matrix_Flush_Delay(){
  96   1              u8 i; // 当前点亮的列号
  97   1              
  98   1              // 动态显示一帧画面
  99   1              for(i=0;i<8;i++){
 100   2                      LED_Animation_Show(i, Animation_Array[i + Next_LED_Index()]);
 101   2                      delay_10us(100);
 102   2              }
 103   1      }
 104          
 105          
 106          /**
 107           **  @brief   定时器法刷新LED点阵
 108           **  @param   参数说明
 109           **  @retval  返回值
 110           **/
 111          void LED_Matrix_Flush_Timer(){
 112   1              static u8 i;
 113   1              
 114   1              LED_Animation_Show(i, Animation_Array[i + Next_LED_Index()]);
 115   1              if(i >= 8) i = 0;
C51 COMPILER V9.60.7.0   LED_MATRIX                                                        01/28/2025 16:36:55 PAGE 3   

 116   1              else i++;
 117   1      }
 118          
 119          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    210    ----
   CONSTANT SIZE    =     67    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      5       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
