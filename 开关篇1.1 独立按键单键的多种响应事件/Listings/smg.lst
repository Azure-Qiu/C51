C51 COMPILER V9.60.7.0   SMG                                                               01/31/2024 19:41:49 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE SMG
OBJECT MODULE PLACED IN .\Objects\smg.obj
COMPILER INVOKED BY: C:\Software\Keil\C51\BIN\C51.EXE smg.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings
                    -\smg.lst) OBJECT(.\Objects\smg.obj)

line level    source

   1          #include "smg.h"
   2          #include <stdio.h>
   3          #include <math.h>
   4          #include <string.h>
   5          /** 
   6           **  @brief    数码管封装
   7           **                1. 字符静态显示：仅需一次输入。输入字符。可用于初始清屏。
   8           **                2. 字符串数据动态显示：包含延时法和定时器法。
   9           **                3. 浮点型数据动态显示：包含延时法和定时器法。可以显示小数。
  10           **                4. 整型数据动态显示：包含延时法和定时器法。可以显示负数。
  11           **  @author   QIU
  12           **  @date     2024.01.31
  13           **/
  14          
  15          
  16          /*-------------------------------------------------------------------*/
  17          
  18          //共阴极数码管字形码编码
  19          u8 code smgduan[] = {0x3f,0x06,0x5b,0x4f,0x66, //0 1 2 3 4
  20                                                   0x6d,0x7d,0x07,0x7f,0x6f, //5 6 7 8 9
  21                                                   0x77,0x7c,0x58,0x5e,0x79, //A b c d E
  22                                                   0x71,0x76,0x30,0x0e,0x38, //F H I J L
  23                                                   0x54,0x3f,0x73,0x67,0x50, //n o p q r
  24                                                   0x6d,0x3e,0x3e,0x6e,0x40};//s U v y -  
  25          
  26          
  27          /**
  28           **  @brief   指定第几个数码管点亮，38译码器控制位选（不对外声明）
  29           **  @param   pos：从左至右，数码管位置 1~8
  30           **  @retval  无
  31           **/
  32          void select_38(u8 pos){
  33   1              u8 temp_pos = 8 - pos; // 0~7
  34   1              A1 = temp_pos % 2; //高位
  35   1              temp_pos /= 2;
  36   1              A2 = temp_pos % 2; 
  37   1              temp_pos /= 2;
  38   1              A3 = temp_pos % 2; //低位
  39   1      }
  40          
  41          
  42          /**
  43           **  @brief   解析数据并取得相应数码管字形码编码
  44           **  @param   dat:想要显示的字符
  45           **  @retval  对应字形码编码值
  46           **/
  47          u8 parse_data(u8 dat){
  48   1              switch(dat){
  49   2                      case '0':
  50   2                      case '1':
  51   2                      case '2':
  52   2                      case '3':
  53   2                      case '4':
  54   2                      case '5':
C51 COMPILER V9.60.7.0   SMG                                                               01/31/2024 19:41:49 PAGE 2   

  55   2                      case '6':
  56   2                      case '7':
  57   2                      case '8':
  58   2                      case '9':return smgduan[dat-'0'];
  59   2                      case 'a':
  60   2                      case 'A':return smgduan[10];
  61   2                      case 'b':
  62   2                      case 'B':return smgduan[11];
  63   2                      case 'c':
  64   2                      case 'C':return smgduan[12];
  65   2                      case 'd':
  66   2                      case 'D':return smgduan[13];
  67   2                      case 'e':
  68   2                      case 'E':return smgduan[14];
  69   2                      case 'f':
  70   2                      case 'F':return smgduan[15];
  71   2                      case 'h':
  72   2                      case 'H':return smgduan[16];
  73   2                      case 'i':
  74   2                      case 'I':return smgduan[17];
  75   2                      case 'j':
  76   2                      case 'J':return smgduan[18];
  77   2                      case 'l':
  78   2                      case 'L':return smgduan[19];
  79   2                      case 'n':
  80   2                      case 'N':return smgduan[20];
  81   2                      case 'o':
  82   2                      case 'O':return smgduan[21];
  83   2                      case 'p':
  84   2                      case 'P':return smgduan[22];
  85   2                      case 'q':
  86   2                      case 'Q':return smgduan[23];
  87   2                      case 'r':
  88   2                      case 'R':return smgduan[24];
  89   2                      case 's':
  90   2                      case 'S':return smgduan[25];
  91   2                      case 'u':
  92   2                      case 'U':return smgduan[26];
  93   2                      case 'v':
  94   2                      case 'V':return smgduan[27];
  95   2                      case 'y':
  96   2                      case 'Y':return smgduan[28];
  97   2                      case '-':return smgduan[29];
  98   2                      default:return 0x00; //不显示
  99   2              }
 100   1      }
 101          
 102          
 103          
 104          /**
 105           **  @brief   根据输入的ASCII码，显示对应字符（1字节）
 106           **  @param   dat：字符数据，或其ASCII值
 107           **  @param   pos：显示位置 1~8
 108           **  @retval  无
 109           **/
 110          void smg_showChar(u8 dat, u8 pos, bit flag){
 111   1              // 解析点亮哪一个数码管
 112   1              select_38(pos);
 113   1              // 解析数据
 114   1              SMG_PORT = parse_data(dat);
 115   1              // 加标点
 116   1              if(flag) SMG_PORT |= 0x80;
C51 COMPILER V9.60.7.0   SMG                                                               01/31/2024 19:41:49 PAGE 3   

 117   1      }
 118          
 119          
 120          
 121          
 122          /**
 123           **  @brief   延时法刷新
 124           **  @param   dat：字符数组，需以'\0'结尾
 125           **  @param   pos：显示位置
 126           **  @param   dot：小数点位置
 127           **  @retval  无
 128           **/
 129          void smg_cycle(u8 dat[], u8 pos, u8 dot){
 130   1              u8 i;
 131   1              // 超出部分直接截断
 132   1              for(i=0;(i<9-pos)&&(dat[i]!='\0');i++){
 133   2                      // 如果是小数点，跳过，往前移一位
 134   2                      if(dat[i] == '.'){
 135   3                              pos -= 1;
 136   3                              continue;
 137   3                      }
 138   2                      if(dot == i+1){
 139   3                              smg_showChar(dat[i], pos+i, true);
 140   3                      }else{
 141   3                              smg_showChar(dat[i], pos+i, false);
 142   3                      }
 143   2                      delay_ms(1); //延时1ms
 144   2                      SMG_PORT = 0x00; //消影
 145   2              }
 146   1      }
 147          
 148          
 149          
 150          /**
 151           **  @brief   显示字符串（动态显示）
 152           **  @param   dat：字符数组，需以'\0'结尾
 153           **  @param   pos：显示位置
 154           **  @retval  无
 155           **/
 156          void smg_showString(u8 dat[], u8 pos){
 157   1              u8 i = 0, dot = 0;
 158   1              // 先判断是否存在小数点
 159   1              while(dat[i]!='\0'){
 160   2                      if(dat[i] == '.') break;
 161   2                      i++;
 162   2              }
 163   1              // 记录下标点位置
 164   1              if(i < strlen(dat)) dot = i;
 165   1              
 166   1              smg_cycle(dat, pos, dot);
 167   1      }
 168          
 169          
 170          /**
 171           **  @brief   数码管显示整数（含正负）
 172           **  @param   dat: 整数
 173           **  @param   pos: 显示位置
 174           **  @retval  无
 175           **/
 176          void smg_showInt(int dat, u8 pos){
 177   1              xdata u8 temp[9];
 178   1              sprintf(temp, "%d", dat); // 含正负
C51 COMPILER V9.60.7.0   SMG                                                               01/31/2024 19:41:49 PAGE 4   

 179   1              smg_showString(temp, pos);
 180   1      }
 181          
 182          
 183          
 184          /**
 185           **  @brief   数码管显示浮点数（含小数点）
 186           **  @param   dat: 浮点数
 187           **  @param   len: 指定精度
 188           **  @param   pos: 显示位置
 189           **  @retval  无
 190           **/
 191          void smg_showFloat(double dat, u8 len, u8 pos){
 192   1              xdata u8 temp[10];
 193   1              int dat_now;
 194   1              dat_now = dat * pow(10, len) + 0.5 * (dat>0?1:-1); // 四舍五入(正负)，由于浮点数存在误差，结果未必准确
 195   1              sprintf(temp, "%d", dat_now); // 含正负
 196   1              smg_cycle(temp, pos, len?(strlen(temp) - len):0);
 197   1      }
 198          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    725    ----
   CONSTANT SIZE    =     33    ----
   XDATA SIZE       =   ----      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      19
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
